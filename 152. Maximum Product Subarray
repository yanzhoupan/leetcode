class Solution(object):
    def maxProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        dpmax = [0 for i in range(len(nums))]
        dpmax[0] = nums[0]
        dpmin = [0 for i in range(len(nums))]
        dpmin[0] = nums[0]
        for i in range(1, len(nums)):
            proMax, proMin = nums[i]*dpmax[i-1], nums[i]*dpmin[i-1]
            dpmax[i] = max([proMax, proMin, nums[i]])
            dpmin[i] = min([proMax, proMin, nums[i]])
        return max(dpmax)
    #  由于有负数的存在，最小和最大值可能在某次乘积中反转，因此需要同时存贮最小值和最大值。
