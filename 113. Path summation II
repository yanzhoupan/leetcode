# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# 思路：输出所有路径为[[]]的形式，然后循环查找满足条件的路径。

class Solution(object):
    def pathSum(self, root, sum1):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        paths = []
        res = []
        if root == None:
            return res
        def DFS(root, lastPath):
            currPath = lastPath + [root.val]
            if not root.left and not root.right:
                paths.append(currPath)
                return
            if root.left:
                DFS(root.left, currPath)
            if root.right:
                DFS(root.right, currPath)
        DFS(root, [])
        for p in paths:
            if sum(p) == sum1:
                res.append(p)
        return res
