# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# pyz递归解法
# class Solution(object):
#     def inorderTraversal(self, root):
#         """
#         :type root: TreeNode
#         :rtype: List[int]
#         """
#         def recur(root, res):
#             if root == None:
#                 return []
#             if root.left != None:
#                 recur(root.left, res)
#             res.append(root.val)
#             if root.right != None:
#                 recur(root.right, res)
#             return res
#         return recur(root, [])


# pyz迭代版：基于栈的数据结构
class Solution(object):
    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        stack = []
        res = []
        while root!=None or len(stack) != 0:
            if root!=None:
                stack.append(root)
                root = root.left
            else:
                root = stack.pop()
                res.append(root.val)
                root = root.right
        return res
