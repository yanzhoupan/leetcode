# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# 大佬代码
class Solution(object):
    def generateTrees(self, n):
        def helper(tree):
            # tree 为有序数组
            ans = []
            # 遍历可能的根结点
            for i, val in enumerate(tree):
                left, right = tree[:i], tree[i+1:]# left、right 分别为左右子树包含的结点
                for ltree in helper(left) or [None]:# 若左子树为 NULL，则令其为 [None]
                    for rtree in helper(right) or [None]:# 若右子树为 NULL，则令其为 [None]
                        root = TreeNode(val)
                        root.left, root.right = ltree, rtree
                        ans.append(root)
            return ans
        return helper(range(1, n+1))

# 如果输入参数为有序数组，则很容易用递归法得到所有的二叉搜索树。故定义了一个 helper 函数。
# 小技巧：左右子树可能为空树，此时为了 for 循环能够正常进行，令其为 [None]。
