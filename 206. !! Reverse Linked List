# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """  
        p, rev = head, None
        while p:
            rev, rev.next, p = p, rev, p.next
        return rev
# 注意：python中使用连续赋值语句的时候，右侧不会因为赋值而改变，左侧按照顺序依次被赋值。


# 递归实现：
# class Solution(object):
#     def reverseList(self, head):
#         if head == None or head.next == None:
#             return head
#         else:
#             newhead = self.reverseList(head.next)
#             head.next.next = head
#             head.next = None
#         return newhead
